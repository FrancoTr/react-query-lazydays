{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { filterByTreatment } from '../utils';\nasync function getStaff() {\n  const {\n    data\n  } = await axiosInstance.get('/staff');\n  return data;\n}\nexport function useStaff() {\n  _s();\n  // for filtering staff by treatment\n  const [filter, setFilter] = useState('all');\n  const selectFn = useCallback(unfilteredStaff => filterByTreatment(unfilteredStaff, filter), [filter]);\n  const fallback = [];\n  const {\n    data: staff = fallback\n  } = useQuery(queryKeys.staff, getStaff, {\n    select: filter !== 'all' ? selectFn : undefined\n  });\n  return {\n    staff,\n    filter,\n    setFilter\n  };\n}\n_s(useStaff, \"H5iJbTq0KjuiK8q6TAQVwM4BZcE=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useCallback","useState","useQuery","axiosInstance","queryKeys","filterByTreatment","getStaff","data","get","useStaff","filter","setFilter","selectFn","unfilteredStaff","fallback","staff","select","undefined"],"sources":["C:/Users/franc/Desktop/projects/react-query-lazydays/client/src/components/staff/hooks/useStaff.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport type { Staff } from '../../../../../shared/types';\r\nimport { axiosInstance } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { filterByTreatment } from '../utils';\r\n\r\ninterface UseStaff {\r\n  staff: Staff[];\r\n  filter: string;\r\n  setFilter: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nasync function getStaff(): Promise<Staff[]> {\r\n  const { data } = await axiosInstance.get('/staff');\r\n  return data;\r\n}\r\n\r\nexport function useStaff(): UseStaff {\r\n  // for filtering staff by treatment\r\n  const [filter, setFilter] = useState('all');\r\n  const selectFn = useCallback(\r\n    (unfilteredStaff) => filterByTreatment(unfilteredStaff, filter),\r\n    [filter],\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: staff = fallback } = useQuery(queryKeys.staff, getStaff, {\r\n    select: filter !== 'all' ? selectFn : undefined,\r\n  });\r\n\r\n  return { staff, filter, setFilter };\r\n}\r\n"],"mappings":";AAAA,SAAmCA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACvE,SAASC,QAAQ,QAAQ,aAAa;AAGtC,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,iBAAiB,QAAQ,UAAU;AAQ5C,eAAeC,QAAQ,GAAqB;EAC1C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,aAAa,CAACK,GAAG,CAAC,QAAQ,CAAC;EAClD,OAAOD,IAAI;AACb;AAEA,OAAO,SAASE,QAAQ,GAAa;EAAA;EACnC;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMW,QAAQ,GAAGZ,WAAW,CACzBa,eAAe,IAAKR,iBAAiB,CAACQ,eAAe,EAAEH,MAAM,CAAC,EAC/D,CAACA,MAAM,CAAC,CACT;EAED,MAAMI,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAEP,IAAI,EAAEQ,KAAK,GAAGD;EAAS,CAAC,GAAGZ,QAAQ,CAACE,SAAS,CAACW,KAAK,EAAET,QAAQ,EAAE;IACrEU,MAAM,EAAEN,MAAM,KAAK,KAAK,GAAGE,QAAQ,GAAGK;EACxC,CAAC,CAAC;EAEF,OAAO;IAAEF,KAAK;IAAEL,MAAM;IAAEC;EAAU,CAAC;AACrC;AAAC,GAdeF,QAAQ;EAAA,QASaP,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}