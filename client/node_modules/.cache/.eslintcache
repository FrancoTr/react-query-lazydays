[{"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\index.tsx":"1","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\reportWebVitals.js":"2","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\app\\App.tsx":"3","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\react-query\\queryClient.ts":"4","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\app\\Navbar.tsx":"5","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\app\\Loading.tsx":"6","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\app\\Routes.tsx":"7","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\theme\\index.js":"8","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\user\\hooks\\useUser.ts":"9","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\app\\Home.tsx":"10","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\user\\Signin.tsx":"11","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\user\\UserProfile.tsx":"12","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\auth\\useAuth.tsx":"13","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\Calendar.tsx":"14","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\staff\\AllStaff.tsx":"15","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\treatments\\Treatments.tsx":"16","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\user\\hooks\\usePatchUser.ts":"17","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\app\\hooks\\useCustomToast.ts":"18","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\staff\\hooks\\useStaff.ts":"19","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\hooks\\useAppointments.ts":"20","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\treatments\\hooks\\useTreatments.ts":"21","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\user\\UserAppointments.tsx":"22","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\DateBox.tsx":"23","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\staff\\Staff.tsx":"24","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\treatments\\Treatment.tsx":"25","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\common\\BackgroundImage.tsx":"26","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\axiosInstance\\index.ts":"27","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\hooks\\monthYear.ts":"28","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\user\\hooks\\useUserAppointments.ts":"29","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\hooks\\useCancelAppointment.ts":"30","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\Appointment.tsx":"31","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\common\\Card.tsx":"32","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\axiosInstance\\constants.js":"33","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\utils.ts":"34","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\hooks\\useReserveAppointment.ts":"35","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\react-query\\constants.js":"36"},{"size":608,"mtime":1673807509458,"results":"37","hashOfConfig":"38"},{"size":449,"mtime":1673807509462,"results":"39","hashOfConfig":"38"},{"size":709,"mtime":1674515437740,"results":"40","hashOfConfig":"38"},{"size":693,"mtime":1674585674796,"results":"41","hashOfConfig":"38"},{"size":1711,"mtime":1673807509432,"results":"42","hashOfConfig":"38"},{"size":646,"mtime":1674584011172,"results":"43","hashOfConfig":"38"},{"size":787,"mtime":1673807509432,"results":"44","hashOfConfig":"38"},{"size":692,"mtime":1673807509464,"results":"45","hashOfConfig":"38"},{"size":1177,"mtime":1673807509455,"results":"46","hashOfConfig":"38"},{"size":725,"mtime":1674589698004,"results":"47","hashOfConfig":"38"},{"size":3052,"mtime":1673807509453,"results":"48","hashOfConfig":"38"},{"size":1936,"mtime":1673807509454,"results":"49","hashOfConfig":"38"},{"size":2451,"mtime":1673807509427,"results":"50","hashOfConfig":"38"},{"size":2088,"mtime":1673807509435,"results":"51","hashOfConfig":"38"},{"size":1150,"mtime":1673807509445,"results":"52","hashOfConfig":"38"},{"size":667,"mtime":1673807509450,"results":"53","hashOfConfig":"38"},{"size":1137,"mtime":1673807509454,"results":"54","hashOfConfig":"38"},{"size":641,"mtime":1673807509433,"results":"55","hashOfConfig":"38"},{"size":839,"mtime":1674587703541,"results":"56","hashOfConfig":"38"},{"size":3420,"mtime":1673807509437,"results":"57","hashOfConfig":"38"},{"size":710,"mtime":1674589425306,"results":"58","hashOfConfig":"38"},{"size":2203,"mtime":1673807509453,"results":"59","hashOfConfig":"38"},{"size":952,"mtime":1673807509436,"results":"60","hashOfConfig":"38"},{"size":560,"mtime":1673807509445,"results":"61","hashOfConfig":"38"},{"size":559,"mtime":1673807509449,"results":"62","hashOfConfig":"38"},{"size":463,"mtime":1673807509443,"results":"63","hashOfConfig":"38"},{"size":379,"mtime":1673807509429,"results":"64","hashOfConfig":"38"},{"size":1507,"mtime":1673807509437,"results":"65","hashOfConfig":"38"},{"size":736,"mtime":1673807509455,"results":"66","hashOfConfig":"38"},{"size":801,"mtime":1673807509438,"results":"67","hashOfConfig":"38"},{"size":2055,"mtime":1673807509434,"results":"68","hashOfConfig":"38"},{"size":1450,"mtime":1673807509444,"results":"69","hashOfConfig":"38"},{"size":99,"mtime":1673807509428,"results":"70","hashOfConfig":"38"},{"size":1648,"mtime":1673807509442,"results":"71","hashOfConfig":"38"},{"size":1137,"mtime":1673807509439,"results":"72","hashOfConfig":"38"},{"size":130,"mtime":1673807509461,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"fgin9t",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\index.tsx",[],["157","158","159","160","161","162","163"],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\reportWebVitals.js",[],["164","165","166","167","168","169","170"],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\app\\App.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\react-query\\queryClient.ts",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\app\\Navbar.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\app\\Loading.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\app\\Routes.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\theme\\index.js",["171","172"],"import { extendTheme, withDefaultColorScheme } from '@chakra-ui/react';\r\n\r\nexport const theme = extendTheme({\r\n  styles: {\r\n    global: {\r\n      body: {\r\n        color: 'olive.800',\r\n        backgroundColor: 'olive.100',\r\n      },\r\n    },\r\n  },\r\n  fonts: {\r\n    body: 'Lato, sans-serif',\r\n    heading: 'Forum, sans-serif',\r\n    mono: 'Menlo, monospace',\r\n  },\r\n  colors: {\r\n    olive: {\r\n      50: '#eff5e9',\r\n      100: '#d5ddd3',\r\n      200: '#bbc5b9',\r\n      300: '#a1ad9e',\r\n      400: '#879684',\r\n      500: '#6e7c6a',\r\n      600: '#556152',\r\n      700: '#3c4539',\r\n      800: '#222a21',\r\n      900: '#051005',\r\n    },\r\n  },\r\n  // withDefaultColorScheme({ colorScheme: \"brand\" }),\r\n});\r\n","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\user\\hooks\\useUser.ts",["173","174","175","176","177","178","179"],"import { AxiosResponse } from 'axios';\r\n\r\nimport type { User } from '../../../../../shared/types';\r\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport {\r\n  clearStoredUser,\r\n  getStoredUser,\r\n  setStoredUser,\r\n} from '../../../user-storage';\r\n\r\n// async function getUser(user: User | null): Promise<User | null> {\r\n//   if (!user) return null;\r\n//   const { data }: AxiosResponse<{ user: User }> = await axiosInstance.get(\r\n//     `/user/${user.id}`,\r\n//     {\r\n//       headers: getJWTHeader(user),\r\n//     },\r\n//   );\r\n//   return data.user;\r\n// }\r\n\r\ninterface UseUser {\r\n  user: User | null;\r\n  updateUser: (user: User) => void;\r\n  clearUser: () => void;\r\n}\r\n\r\nexport function useUser(): UseUser {\r\n  // TODO: call useQuery to update user data from server\r\n  const user = null;\r\n\r\n  // meant to be called from useAuth\r\n  function updateUser(newUser: User): void {\r\n    // TODO: update the user in the query cache\r\n  }\r\n\r\n  // meant to be called from useAuth\r\n  function clearUser() {\r\n    // TODO: reset user to null in query cache\r\n  }\r\n\r\n  return { user, updateUser, clearUser };\r\n}\r\n","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\app\\Home.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\user\\Signin.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\user\\UserProfile.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\auth\\useAuth.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\Calendar.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\staff\\AllStaff.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\treatments\\Treatments.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\user\\hooks\\usePatchUser.ts",["180","181","182","183","184"],"import jsonpatch from 'fast-json-patch';\r\n\r\nimport type { User } from '../../../../../shared/types';\r\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\r\nimport { useUser } from './useUser';\r\n\r\n// for when we need a server function\r\n// async function patchUserOnServer(\r\n//   newData: User | null,\r\n//   originalData: User | null,\r\n//  ): Promise<User | null> {\r\n//   if (!newData || !originalData) return null;\r\n//   // create a patch for the difference between newData and originalData\r\n//   const patch = jsonpatch.compare(originalData, newData);\r\n\r\n//   // send patched data to the server\r\n//   const { data } = await axiosInstance.patch(\r\n//     `/user/${originalData.id}`,\r\n//     { patch },\r\n//     {\r\n//       headers: getJWTHeader(originalData),\r\n//     },\r\n//   );\r\n//   return data.user;\r\n//  }\r\n\r\n// TODO: update type to UseMutateFunction type\r\nexport function usePatchUser(): (newData: User | null) => void {\r\n  const { user, updateUser } = useUser();\r\n\r\n  // TODO: replace with mutate function\r\n  const patchUser = (newData: User | null) => {\r\n    // nothing to see here\r\n  };\r\n\r\n  return patchUser;\r\n}\r\n","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\app\\hooks\\useCustomToast.ts",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\staff\\hooks\\useStaff.ts",["185"],"import { Dispatch, SetStateAction, useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport type { Staff } from '../../../../../shared/types';\r\nimport { axiosInstance } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { filterByTreatment } from '../utils';\r\n\r\ninterface UseStaff {\r\n  staff: Staff[];\r\n  filter: string;\r\n  setFilter: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nasync function getStaff(): Promise<Staff[]> {\r\n  const { data } = await axiosInstance.get('/staff');\r\n  return data;\r\n}\r\n\r\nexport function useStaff(): UseStaff {\r\n  // for filtering staff by treatment\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  const fallback = [];\r\n  const { data: staff = fallback } = useQuery(queryKeys.staff, getStaff);\r\n\r\n  return { staff, filter, setFilter };\r\n}\r\n","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\hooks\\useAppointments.ts",["186","187","188","189"],"// @ts-nocheck\r\nimport dayjs from 'dayjs';\r\nimport { Dispatch, SetStateAction, useState } from 'react';\r\n\r\nimport { axiosInstance } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { useUser } from '../../user/hooks/useUser';\r\nimport { AppointmentDateMap } from '../types';\r\nimport { getAvailableAppointments } from '../utils';\r\nimport { getMonthYearDetails, getNewMonthYear, MonthYear } from './monthYear';\r\n\r\n// for useQuery call\r\nasync function getAppointments(\r\n  year: string,\r\n  month: string,\r\n): Promise<AppointmentDateMap> {\r\n  const { data } = await axiosInstance.get(`/appointments/${year}/${month}`);\r\n  return data;\r\n}\r\n\r\n// types for hook return object\r\ninterface UseAppointments {\r\n  appointments: AppointmentDateMap;\r\n  monthYear: MonthYear;\r\n  updateMonthYear: (monthIncrement: number) => void;\r\n  showAll: boolean;\r\n  setShowAll: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\n// The purpose of this hook:\r\n//   1. track the current month/year (aka monthYear) selected by the user\r\n//     1a. provide a way to update state\r\n//   2. return the appointments for that particular monthYear\r\n//     2a. return in AppointmentDateMap format (appointment arrays indexed by day of month)\r\n//     2b. prefetch the appointments for adjacent monthYears\r\n//   3. track the state of the filter (all appointments / available appointments)\r\n//     3a. return the only the applicable appointments for the current monthYear\r\nexport function useAppointments(): UseAppointments {\r\n  /** ****************** START 1: monthYear state *********************** */\r\n  // get the monthYear for the current date (for default monthYear state)\r\n  const currentMonthYear = getMonthYearDetails(dayjs());\r\n\r\n  // state to track current monthYear chosen by user\r\n  // state value is returned in hook return object\r\n  const [monthYear, setMonthYear] = useState(currentMonthYear);\r\n\r\n  // setter to update monthYear obj in state when user changes month in view,\r\n  // returned in hook return object\r\n  function updateMonthYear(monthIncrement: number): void {\r\n    setMonthYear((prevData) => getNewMonthYear(prevData, monthIncrement));\r\n  }\r\n  /** ****************** END 1: monthYear state ************************* */\r\n  /** ****************** START 2: filter appointments  ****************** */\r\n  // State and functions for filtering appointments to show all or only available\r\n  const [showAll, setShowAll] = useState(false);\r\n\r\n  // We will need imported function getAvailableAppointments here\r\n  // We need the user to pass to getAvailableAppointments so we can show\r\n  //   appointments that the logged-in user has reserved (in white)\r\n  const { user } = useUser();\r\n\r\n  /** ****************** END 2: filter appointments  ******************** */\r\n  /** ****************** START 3: useQuery  ***************************** */\r\n  // useQuery call for appointments for the current monthYear\r\n\r\n  // TODO: update with useQuery!\r\n  // Notes:\r\n  //    1. appointments is an AppointmentDateMap (object with days of month\r\n  //       as properties, and arrays of appointments for that day as values)\r\n  //\r\n  //    2. The getAppointments query function needs monthYear.year and\r\n  //       monthYear.month\r\n  const appointments = {};\r\n\r\n  /** ****************** END 3: useQuery  ******************************* */\r\n\r\n  return { appointments, monthYear, updateMonthYear, showAll, setShowAll };\r\n}\r\n","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\treatments\\hooks\\useTreatments.ts",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\user\\UserAppointments.tsx",["190"],"import {\r\n  Box,\r\n  Center,\r\n  Heading,\r\n  IconButton,\r\n  Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Tr,\r\n} from '@chakra-ui/react';\r\nimport dayjs from 'dayjs';\r\nimport { ReactElement } from 'react';\r\nimport { ImCancelCircle } from 'react-icons/im';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport type { Appointment } from '../../../../shared/types';\r\nimport { useCancelAppointment } from '../appointments/hooks/useCancelAppointment';\r\nimport { useUser } from './hooks/useUser';\r\nimport { useUserAppointments } from './hooks/useUserAppointments';\r\n\r\ninterface AppointmentsTableProps {\r\n  userAppointments: Appointment[];\r\n}\r\n\r\nfunction AppointmentsTable({\r\n  userAppointments,\r\n}: AppointmentsTableProps): ReactElement {\r\n  const cancelAppointment = useCancelAppointment();\r\n\r\n  return (\r\n    <Table variant=\"simple\" m={10} maxWidth=\"500px\">\r\n      <Tbody>\r\n        {userAppointments.map((appointment) => (\r\n          <Tr key={appointment.id}>\r\n            <Td>\r\n              <Text>{dayjs(appointment.dateTime).format('MMM D')}</Text>\r\n            </Td>\r\n            <Td>\r\n              <Text>{dayjs(appointment.dateTime).format('h a')}</Text>\r\n            </Td>\r\n            <Td>\r\n              <Text>{appointment.treatmentName}</Text>\r\n            </Td>\r\n            <Td>\r\n              <IconButton\r\n                aria-label=\"cancel appointment\"\r\n                onClick={() => {\r\n                  cancelAppointment(appointment);\r\n                }}\r\n                icon={<ImCancelCircle />}\r\n              />\r\n            </Td>\r\n          </Tr>\r\n        ))}\r\n      </Tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport function UserAppointments(): ReactElement | null {\r\n  const { user } = useUser();\r\n  const userAppointments = useUserAppointments();\r\n\r\n  if (!user) {\r\n    // don't render if there's no user\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Heading mt={10} textAlign=\"center\">\r\n        Your Appointments\r\n      </Heading>\r\n      <Center>\r\n        {userAppointments.length > 0 ? (\r\n          <AppointmentsTable userAppointments={userAppointments} />\r\n        ) : (\r\n          <Link to=\"/Calendar\">Book an appointment</Link>\r\n        )}\r\n      </Center>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\DateBox.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\staff\\Staff.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\treatments\\Treatment.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\common\\BackgroundImage.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\axiosInstance\\index.ts",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\hooks\\monthYear.ts",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\user\\hooks\\useUserAppointments.ts",["191","192","193","194","195","196"],"import dayjs from 'dayjs';\r\n\r\nimport type { Appointment, User } from '../../../../../shared/types';\r\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { useUser } from './useUser';\r\n\r\n// for when we need a query function for useQuery\r\n// async function getUserAppointments(\r\n//   user: User | null,\r\n// ): Promise<Appointment[] | null> {\r\n//   if (!user) return null;\r\n//   const { data } = await axiosInstance.get(`/user/${user.id}/appointments`, {\r\n//     headers: getJWTHeader(user),\r\n//   });\r\n//   return data.appointments;\r\n// }\r\n\r\nexport function useUserAppointments(): Appointment[] {\r\n  // TODO replace with React Query\r\n  return [];\r\n}\r\n","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\hooks\\useCancelAppointment.ts",["197","198","199"],"import { Appointment } from '../../../../../shared/types';\r\nimport { axiosInstance } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\r\n\r\n// for when server call is needed\r\n// async function removeAppointmentUser(appointment: Appointment): Promise<void> {\r\n//   const patchData = [{ op: 'remove', path: '/userId' }];\r\n//   await axiosInstance.patch(`/appointment/${appointment.id}`, {\r\n//     data: patchData,\r\n//   });\r\n// }\r\n\r\n// TODO: update return type\r\nexport function useCancelAppointment(): (appointment: Appointment) => void {\r\n  const toast = useCustomToast();\r\n\r\n  // TODO: replace with mutate function\r\n  return (appointment: Appointment) => {\r\n    // nothing to see here\r\n  };\r\n}\r\n","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\Appointment.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\common\\Card.tsx",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\axiosInstance\\constants.js",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\utils.ts",[],"C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\components\\appointments\\hooks\\useReserveAppointment.ts",["200","201","202","203"],"import { Appointment } from '../../../../../shared/types';\r\nimport { axiosInstance } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\r\nimport { useUser } from '../../user/hooks/useUser';\r\n\r\n// for when we need functions for useMutation\r\n// async function setAppointmentUser(\r\n//   appointment: Appointment,\r\n//   userId: number | undefined,\r\n// ): Promise<void> {\r\n//   if (!userId) return;\r\n//   const patchOp = appointment.userId ? 'replace' : 'add';\r\n//   const patchData = [{ op: patchOp, path: '/userId', value: userId }];\r\n//   await axiosInstance.patch(`/appointment/${appointment.id}`, {\r\n//     data: patchData,\r\n//   });\r\n// }\r\n\r\n// TODO: update type for React Query mutate function\r\ntype AppointmentMutationFunction = (appointment: Appointment) => void;\r\n\r\nexport function useReserveAppointment(): AppointmentMutationFunction {\r\n  const { user } = useUser();\r\n  const toast = useCustomToast();\r\n\r\n  // TODO: replace with mutate function\r\n  return (appointment: Appointment) => {\r\n    // nothing to see here\r\n  };\r\n}\r\n","C:\\Users\\franc\\Desktop\\projects\\react-query-lazydays\\client\\src\\react-query\\constants.js",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":1,"column":23,"nodeType":"220","messageId":"221","endLine":1,"endColumn":45},{"ruleId":"222","severity":1,"message":"219","line":1,"column":23,"nodeType":"220","messageId":"221","endLine":1,"endColumn":45},{"ruleId":"222","severity":1,"message":"223","line":1,"column":10,"nodeType":"220","messageId":"221","endLine":1,"endColumn":23},{"ruleId":"222","severity":1,"message":"224","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":23},{"ruleId":"222","severity":1,"message":"225","line":4,"column":25,"nodeType":"220","messageId":"221","endLine":4,"endColumn":37},{"ruleId":"222","severity":1,"message":"226","line":5,"column":10,"nodeType":"220","messageId":"221","endLine":5,"endColumn":19},{"ruleId":"222","severity":1,"message":"227","line":7,"column":3,"nodeType":"220","messageId":"221","endLine":7,"endColumn":18},{"ruleId":"222","severity":1,"message":"228","line":8,"column":3,"nodeType":"220","messageId":"221","endLine":8,"endColumn":16},{"ruleId":"222","severity":1,"message":"229","line":9,"column":3,"nodeType":"220","messageId":"221","endLine":9,"endColumn":16},{"ruleId":"222","severity":1,"message":"230","line":1,"column":8,"nodeType":"220","messageId":"221","endLine":1,"endColumn":17},{"ruleId":"222","severity":1,"message":"224","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":23},{"ruleId":"222","severity":1,"message":"225","line":4,"column":25,"nodeType":"220","messageId":"221","endLine":4,"endColumn":37},{"ruleId":"222","severity":1,"message":"231","line":29,"column":11,"nodeType":"220","messageId":"221","endLine":29,"endColumn":15},{"ruleId":"222","severity":1,"message":"232","line":29,"column":17,"nodeType":"220","messageId":"221","endLine":29,"endColumn":27},{"ruleId":"222","severity":1,"message":"233","line":7,"column":10,"nodeType":"220","messageId":"221","endLine":7,"endColumn":27},{"ruleId":"222","severity":1,"message":"226","line":6,"column":10,"nodeType":"220","messageId":"221","endLine":6,"endColumn":19},{"ruleId":"222","severity":1,"message":"234","line":9,"column":10,"nodeType":"220","messageId":"221","endLine":9,"endColumn":34},{"ruleId":"222","severity":1,"message":"235","line":13,"column":16,"nodeType":"220","messageId":"221","endLine":13,"endColumn":31},{"ruleId":"222","severity":1,"message":"231","line":60,"column":11,"nodeType":"220","messageId":"221","endLine":60,"endColumn":15},{"ruleId":"222","severity":1,"message":"236","line":15,"column":16,"nodeType":"220","messageId":"221","endLine":15,"endColumn":24},{"ruleId":"222","severity":1,"message":"237","line":1,"column":8,"nodeType":"220","messageId":"221","endLine":1,"endColumn":13},{"ruleId":"222","severity":1,"message":"238","line":3,"column":28,"nodeType":"220","messageId":"221","endLine":3,"endColumn":32},{"ruleId":"222","severity":1,"message":"224","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":23},{"ruleId":"222","severity":1,"message":"225","line":4,"column":25,"nodeType":"220","messageId":"221","endLine":4,"endColumn":37},{"ruleId":"222","severity":1,"message":"226","line":5,"column":10,"nodeType":"220","messageId":"221","endLine":5,"endColumn":19},{"ruleId":"222","severity":1,"message":"239","line":6,"column":10,"nodeType":"220","messageId":"221","endLine":6,"endColumn":17},{"ruleId":"222","severity":1,"message":"224","line":2,"column":10,"nodeType":"220","messageId":"221","endLine":2,"endColumn":23},{"ruleId":"222","severity":1,"message":"226","line":3,"column":10,"nodeType":"220","messageId":"221","endLine":3,"endColumn":19},{"ruleId":"222","severity":1,"message":"240","line":16,"column":9,"nodeType":"220","messageId":"221","endLine":16,"endColumn":14},{"ruleId":"222","severity":1,"message":"224","line":2,"column":10,"nodeType":"220","messageId":"221","endLine":2,"endColumn":23},{"ruleId":"222","severity":1,"message":"226","line":3,"column":10,"nodeType":"220","messageId":"221","endLine":3,"endColumn":19},{"ruleId":"222","severity":1,"message":"231","line":24,"column":11,"nodeType":"220","messageId":"221","endLine":24,"endColumn":15},{"ruleId":"222","severity":1,"message":"240","line":25,"column":9,"nodeType":"220","messageId":"221","endLine":25,"endColumn":14},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"lines-around-directive",["243"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'withDefaultColorScheme' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'AxiosResponse' is defined but never used.","'axiosInstance' is defined but never used.","'getJWTHeader' is defined but never used.","'queryKeys' is defined but never used.","'clearStoredUser' is defined but never used.","'getStoredUser' is defined but never used.","'setStoredUser' is defined but never used.","'jsonpatch' is defined but never used.","'user' is assigned a value but never used.","'updateUser' is assigned a value but never used.","'filterByTreatment' is defined but never used.","'getAvailableAppointments' is defined but never used.","'getAppointments' is defined but never used.","'Redirect' is defined but never used.","'dayjs' is defined but never used.","'User' is defined but never used.","'useUser' is defined but never used.","'toast' is assigned a value but never used.","no-global-assign","no-unsafe-negation","padding-line-between-statements"]